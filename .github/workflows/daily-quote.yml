name: Daily Automation Suite

on:
  schedule:
    # Daily quote at 6:00 AM IST (00:30 UTC) Set at 3 AM 
    - cron: '30 21 * * *'
    # Daily briefing at 6:15 AM IST (00:45 UTC) Set at 3.15 AM
    - cron: '45 21 * * *'
  workflow_dispatch:  # Manual trigger

jobs:
  daily-quote:
    name: Generate Daily Quote
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install openai requests

      - name: Run Daily Quote Script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_PAGE_ID: ${{ secrets.NOTION_PAGE_ID }}
        run: python daily_quote.py

  daily-briefing:
    name: Generate Daily Briefing & Diagnostics
    runs-on: ubuntu-latest
    needs: daily-quote   # Ensures quote runs before briefing
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        # Adds all possible dependencies for Google API JWT and HTTP libraries
        run: pip install openai requests PyJWT cryptography google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

      - name: Run Daily Briefing Script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_PAGE_ID: ${{ secrets.NOTION_PAGE_ID }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          GOOGLE_CALENDAR_ID: ${{ secrets.GOOGLE_CALENDAR_ID }}
          WEEKLY_CHECKLIST_DB_ID: ${{ secrets.WEEKLY_CHECKLIST_DB_ID }}
          STRATEGIC_GOALS_DB_ID: ${{ secrets.STRATEGIC_GOALS_DB_ID }}
          DAILY_JOURNAL_DB_ID: ${{ secrets.DAILY_JOURNAL_DB_ID }}
        run: python daily_briefing.py
